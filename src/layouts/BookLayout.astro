---
import Section from '../components/Section.astro';
import { getCollection } from 'astro:content';
const currentBooks = await getCollection('books', ({ data }) => {
  return ((data.archived !== true) && data.eventDate);
});
currentBooks.sort((a, b) => a.data.eventDate.getTime() - b.data.eventDate.getTime());
const archivedBooks = await getCollection('books', ({ data }) => {
  return data.archived === true;
});
---
<hr>
{currentBooks.map(async book => 
    {
    const {
        bookTitle,
        bookType,
        coverImage,
        eventLink,
        archiveLink,
        eventDateHeading,
        eventDate,
    } = book.data;
    const formattedDate = eventDate.toLocaleDateString("en-US",
    {
        year: "numeric",
        month: "long",
        day: "numeric",
    });
    const { Content } = await book.render();
    return (
        <div class="book-container">
            <div>
                <a href={archiveLink} target="_blank">
                    <img src={`/${coverImage}`} alt={`${bookTitle} ${bookType && `(${bookType})`}`} />
                </a>
            </div>
            <div>
                <h3>{formattedDate}<br>
                {bookTitle}<br>
                {bookType && `(${bookType})`}</h3>
                <Content />
                {eventLink && <p><a href={eventLink} target="_blank">Facebook event</a></p>}
            </div>
        </div>
  );
},
)}
<hr />
<Section>
    <h2>Previous Book Club Selections</h2>
</Section>
<div class="book-grid">
    {archivedBooks.map(book => 
        {
            const {
                bookTitle,
                bookType,
                coverImage,
                archiveLink,
            } = book.data;
            return (
                <div>
                    <a href={archiveLink} target="_blank">
                        <img src={`/${coverImage}`} alt={`${bookTitle} ${bookType && `(${bookType})`}`} />
                    </a>
                </div>
            );
        },
    )}
</div>